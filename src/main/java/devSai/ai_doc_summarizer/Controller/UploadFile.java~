package devSai.ai_doc_summarizer.Controller;


import devSai.ai_doc_summarizer.DTOs.SummarizationResponse;
import devSai.ai_doc_summarizer.DocumentExtractor.DocumentExtractor;
import devSai.ai_doc_summarizer.DocumentExtractor.DocumentExtractorFactory;

import devSai.ai_doc_summarizer.Service.SummaryService;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;


import java.io.IOException;
import java.util.Objects;

@RestController
@RequestMapping("/api/documents")
public class UploadFile {


    private static final Logger logger = LoggerFactory.getLogger(UploadFile.class);
    private final DocumentExtractorFactory documentExtractorFactory;
    private final SummaryService summaryService;

    public UploadFile(DocumentExtractorFactory documentExtractorFactory,SummaryService summaryService) {

        this.documentExtractorFactory = documentExtractorFactory;
        this.summaryService = summaryService;
    }


    @PostMapping("/summarize")
    public ResponseEntity<SummarizationResponse> summarizeDocument (@RequestParam("document") MultipartFile file) throws IOException {
        logger.info("Incoming request to summarize document.");
        DocumentExtractor documentExtractor = documentExtractorFactory.getDocumentExtractor(Objects.requireNonNull(file.getOriginalFilename()));
        String extractedString = documentExtractor.extract(file.getInputStream());
        System.out.println("total characters in doc: "+extractedString.length());
        try{
            SummarizationResponse response = summaryService.getSummary(extractedString);
            return new ResponseEntity<response>(response, 200);
        }

         catch (Exception e) {
            logger.error("Error while summarizing document", e);
            return (ResponseEntity<SummarizationResponse>) ResponseEntity.status(500);
        }
    }



}
